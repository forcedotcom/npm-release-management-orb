# Copyright (c) 2018, salesforce.com, inc.
# All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause
# For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause

version: 2.1
description: >
  Runs NUTs for package.  Set environment: TESTKIT_EXECUTABLE_PATH:whatever to use an executable besides bin/run

# Test comment

parameters:
  node_version:
    description: version of node to run tests against
    type: string
    default: "12"
  os:
    description: operating system to run tests on
    type: enum
    enum: ['linux', 'windows']
    default: 'linux'
  sfdx_version:
    description: 'By default, the latest version of the standalone CLI will be installed. To install via npm, supply a version tag such as "latest" or "6".'
    default: ''
    type: string
  sfdx_executable_path:
    description: "Path to sfdx executable to be used by NUTs, defaults to ''"
    default: ''
    type: string
  repo_tag:
    description: "The tag of the module repo to checkout, '' defaults to branch/PR"
    default: ''
    type: string

executor:
  name: << parameters.os >>

steps:
  - install-node:
      version: <<parameters.node_version>>
      os: <<parameters.os>>
  - install-sfdx:
      version: <<parameters.sfdx_version>>
      os: <<parameters.os>>
  - when:
      condition:
        equal: ['', <<parameters.repo_tag>>]
        steps:
          - checkout
  - when:
      condition:
        not:
          equal: ['', <<parameters.repo_tag>>]
        steps:
          - run:
              name: Checkout using git
              command: git clone --branch v<<parameters.repo_tag>> $CIRCLE_REPOSITORY_URL
  - when:
      condition:
        equal: ['windows', <<parameters.os>>]
      steps:
        - run:
            name: Install dependencies
            command: yarn
        - run:
            name: Build
            command: yarn build
  - when:
      condition:
        equal: ['linux', <<parameters.os>>]
      steps:
        - restore_cache:
            keys:
              - v3-npm-{{checksum "yarn.lock"}}
        - run:
            name: Install dependencies
            command: yarn
        - run:
            name: Build
            command: yarn build
        - save_cache:
            key: v3-npm-{{checksum "yarn.lock"}}
            paths:
              - node_modules
              - ~/node_modules
              - ~/.cache/yarn
              - ~/.config/yarn
        - verify-installed-plugin
        - run:
            name: set TESTKIT_ENABLE_ZIP for artifacts on linux
            command: |
              echo "export TESTKIT_ENABLE_ZIP=true" >> $BASH_ENV
  - run:
      name: Create artifact dir
      command: |
        mkdir artifacts
  - run:
      name: Nuts
      environment:
        TESTKIT_EXECUTABLE_PATH: <<parameters.sfdx_executable_path>>
      command: |
        echo "Using node: $(node --version)"
        yarn test:nuts
      # this is in the command instead of the circle project environment to prevent it from happening on windows
  - store_artifacts:
      path: artifacts
