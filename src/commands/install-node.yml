# Copyright (c) 2018, salesforce.com, inc.
# All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause
# For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause

# How to author commands: https://circleci.com/docs/2.0/reusing-config/#authoring-reusable-commands
description: >
  Install node version first

parameters:
  version:
    description: version of node to install and use
    default: latest
    type: string
  os:
    description: operating system you want to install node on
    type: enum
    enum: ["linux", "windows"]
    default: "linux"

steps:
  - when:
      condition:
        equal: ["linux", <<parameters.os>>]
      steps:
        - run:
            name: Install and use node version
            command: |
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash;
              echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
              echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
              source $BASH_ENV

              echo Using nvm: $(nvm --version)

              nvm ls-remote --lts

              if [[ "<<parameters.version>>" == "latest" ]]; then
                nvm install node
                nvm alias default node
              elif [[ "<<parameters.version>>" == "lts" ]]; then
                nvm install $(nvm_alias lts/*)
                nvm alias default $(nvm_alias lts/*)
              elif [[ "<<parameters.version>>" == "maintenance" ]]; then
                nvm install $(nvm_alias lts/-1)
                nvm alias default $(nvm_alias lts/-1)
              else
                nvm install <<parameters.version>>
                nvm alias default <<parameters.version>>
              fi

              echo "Using node: $(node --version)"
              echo 'nvm use default &>/dev/null' >> $BASH_ENV

  - when:
      condition:
        equal: ["windows", <<parameters.os>>]
      steps:
        - command: choco config set cacheLocation %LOCALAPPDATA%/Temp/chocolatey
        - restore_cache:
            keys:
              - chocolatey-<<parameters.version>>
        - run:
            name: Install and use node version
            command: |
              if("<<parameters.version>>" -eq "latest") {
                choco install nodejs
              } else {
                $r = Invoke-WebRequest https://nodejs.org/download/release/index.json | ConvertFrom-Json
                $latest_of_version = ($r | where { $_.version -like "v<<parameters.version>>*" })[0].version.substring(1)
                choco install nodejs --version $latest_of_version --allow-downgrade
              }
              echo "Using node: $(node --version)"
        - save_cache:
            key: chocolatey-<<parameters.version>>
            paths:
              - "%LOCALAPPDATA%/Temp/chocolatey"
